{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.material.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/top/top.component.css","webpack:///./src/app/top/top.component.html","webpack:///./src/app/top/top.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"mat-sidenav-container, mat-sidenav-content, mat-sidenav {\\n    height: 100%;\\n  }\\n  \\n  mat-sidenav {\\n    width: 250px;\\n  }\\n  \\n  a {\\n    text-decoration: none;\\n    color: white;\\n  }\\n  \\n  a:hover,\\n  a:active {\\n    color: lightgray;\\n  }\\n  \\n  .navigation-items {\\n    list-style: none;\\n    padding: 0;\\n    margin: 0;\\n    cursor: pointer;\\n  }\\n  \\n  .icon {\\n    display: inline-block;\\n    height: 30px;\\n    margin: 0 auto;\\n    padding-right: 5px;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 15%;\\n  }\\n  \\n  .label {\\n    display: inline-block;\\n    line-height: 30px;\\n    margin: 0;\\n    width: 85%;\\n  }\"","module.exports = \"<mat-sidenav-container>\\n  <mat-sidenav  #sidenav role=\\\"navigation\\\">\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/\\\">\\n        <mat-icon class=\\\"icon\\\">home</mat-icon>  \\n        <span class=\\\"label\\\">Home</span>\\n      </a>\\n      <a mat-list-item routerLink=\\\"/top\\\">\\n        <mat-icon class=\\\"icon\\\">music_note</mat-icon>  \\n        <span class=\\\"label\\\">Top 100</span>\\n      </a>\\n      <a mat-list-item>\\n        <mat-icon class=\\\"icon\\\">album</mat-icon>\\n        <span class=\\\"label\\\">Top album</span>\\n      </a>\\n      <a mat-list-item>\\n        <mat-icon class=\\\"icon\\\">info</mat-icon>\\n        <span class=\\\"label\\\">About</span>\\n      </a> \\n      <a mat-list-item>\\n        <mat-icon class=\\\"icon\\\">contact_support</mat-icon>\\n        <span class=\\\"label\\\">Contact</span>\\n      </a> \\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <div fxHide.gt-xs>\\n        <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n          <mat-icon>menu</mat-icon>\\n        </button>\\n      </div>\\n      <div>\\n        <a routerLink=\\\"/\\\">Billboard</a>\\n      </div>\\n      <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\n        <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\n          <li>\\n            <a routerLink=\\\"/\\\">\\n              <mat-icon class=\\\"icon\\\">home</mat-icon>\\n              <span class=\\\"label\\\">Home</span>\\n            </a>\\n          </li>\\n          <li>\\n            <a routerLink=\\\"/top\\\">\\n              <mat-icon class=\\\"icon\\\">music_note</mat-icon>\\n              <span class=\\\"label\\\">Top 100</span>\\n            </a>\\n          </li>\\n          <li>\\n            <a>\\n              <mat-icon class=\\\"icon\\\">album</mat-icon>\\n              <span class=\\\"label\\\">Top album</span>\\n            </a>\\n          </li>\\n          <li>\\n            <a>\\n              <mat-icon class=\\\"icon\\\">info</mat-icon>\\n              <span class=\\\"label\\\">About</span>\\n            </a>\\n          </li>\\n          <li>\\n            <a>\\n              <mat-icon class=\\\"icon\\\">contact_support</mat-icon>\\n              <span class=\\\"label\\\">Contact</span>\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </mat-toolbar>\\n  <main>\\n    <router-outlet></router-outlet>\\n  </main>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Billboard-client';\n}\n","import { NgModule } from '@angular/core';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatTableModule } from '@angular/material';\nimport { MatPaginatorModule, MatFormFieldModule, MatRadioModule, MatSelectModule, MatInputModule } from '@angular/material';\nimport { MatDatepickerModule, MatNativeDateModule, MatOptionModule, MatDialogModule } from '@angular/material';\nimport {  MatProgressSpinnerModule, MatSnackBarModule } from '@angular/material';\n\n\n@NgModule({\n    imports: [\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatFormFieldModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatInputModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatOptionModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatSnackBarModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatFormFieldModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatInputModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatOptionModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatSnackBarModule\n    ],\n})\nexport class AppMaterialModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { AppMaterialModule } from './app.material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppComponent } from './app.component';\nimport { Routing } from './app.routing';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\nimport { TopComponent } from './top/top.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TopComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppMaterialModule,\n    FlexLayoutModule,\n    Routing\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { TopComponent } from './top/top.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'top', component: TopComponent}\n];\n\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(routes);\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>Angular Content Management System</h1>\\n  <p>\\n    This is a platform for technical writers to manage their blog post contents related to angular.\\n    <br> Click on Login to get Started!!!\\n  </p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  top works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top',\n  templateUrl: './top.component.html',\n  styleUrls: ['./top.component.css']\n})\nexport class TopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}